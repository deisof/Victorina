"I love " + "python"\\"I love python"\\оператор + в языке програмирования python в работе с строками склеивает их, поэтому правильный ответ "I love python"
6 == 12\\False\\ оператор двойного равно сравнивет значения и в результате мы получаем True или False, сдесь 6 не равно 12 следовательно выражение 6 = 12 не верно, False
4.5 // 2\\2\\оператор // в python целочисленное деление, поэтому в ответе у нас получается 2
type(1 / 2)\\class 'float'\\класс type() в python возращает нам тип переменной или в данном случаи выражение не целочисленного деления 1 на 2 мы получаем 0.5, аэто класс float 
"snow storm"[6:8]\\to\\сдесь мы имеем строку snow storm, а [6:8] это срез строки с 7 по 8 включительно, и в итоге мы получаем строку to
len([1, 2, 3, None, (), [], ])\\6\\len в python возращает размер списка и в данном случае всё элементы могут находится в списке, поэтому ответ 6
0 if 23 > 10 else 11\\0\\сдесь мы видем условие if(если) 23 >(больше) 10 и else(ещё) 11, else срабатывает только если условие if неверно(False), сдесь условие верно поэтому мы не переходим в else и не возращаем 11, а так как в if не написаны следущие действия мы выводим 0 
"Hi" * 4\\HiHiHiHi\\оператор * строку на число, означает что мы n число раз копируем строку, поэтому ответ HiHiHiHi
eval('300 / 10 * 10')\\300.0\\оператор / это вещественное деление и даже если ответ будет целым чилом он переобразует его в числительное, а функция eval() вычисляет выражение даже если оно находится в строке, поэтому ответ 300.0
print("Alice says I python love"[20:-1] + "I love"[-1] * eval('50 //10'))\\loveeeee\\сдесь мы берем срез строки с 20 по последний элемент(-1, не включительно) соединяем его с другим срезом -1(последний элемент) повторённый числу равному значению выражения целочисленного деления 50 на 10, и в итоге мы получаем строку loveeeee
